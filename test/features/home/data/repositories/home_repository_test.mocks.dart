// Mocks generated by Mockito 5.4.2 from annotations
// in hotel_task/test/features/home/data/repositories/home_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dio/dio.dart' as _i3;
import 'package:hotel_task/core/api/api_consumer.dart' as _i2;
import 'package:hotel_task/features/home/data/datasources/home_remote_data_source.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiConsumer_0 extends _i1.SmartFake implements _i2.ApiConsumer {
  _FakeApiConsumer_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_1<T> extends _i1.SmartFake implements _i3.Response<T> {
  _FakeResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomeRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRemoteDataSource extends _i1.Mock
    implements _i4.HomeRemoteDataSource {
  MockHomeRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApiConsumer get apiConsumer => (super.noSuchMethod(
        Invocation.getter(#apiConsumer),
        returnValue: _FakeApiConsumer_0(
          this,
          Invocation.getter(#apiConsumer),
        ),
      ) as _i2.ApiConsumer);

  @override
  _i5.Future<_i3.Response<dynamic>> getHotels() => (super.noSuchMethod(
        Invocation.method(
          #getHotels,
          [],
        ),
        returnValue:
            _i5.Future<_i3.Response<dynamic>>.value(_FakeResponse_1<dynamic>(
          this,
          Invocation.method(
            #getHotels,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Response<dynamic>>);
}
